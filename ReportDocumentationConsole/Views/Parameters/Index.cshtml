
@model List<ReportDocumentationConsole.ViewModels.ReportSPParameter>

@{
    ViewBag.Title = "Parameters";
}


@{

    Html.RenderAction("_DropDownList", "Home", new { selectedReportName = ViewData["selectedReportName"] });
}

@Html.Action("_ReportDescription", "MainConsole", new { selectedReportId = @ViewData["selectedReportId"].ToString() })


@Html.Partial("_MainButtons")

@section Scripts{
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".RDLParamName").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "RDLParamName");
            });
            $(".ParameterDesc").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "ParameterDesc");
            });
            $(".IsUserControlled").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "IsUserControlled");
            });
            $(".UserControlType").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "UserControlType");
            });
            $(".DefaultValue").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "DefaultValue");
            });
            $(".AdditionalInfo").dblclick(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                UpdateVal(CurrentEle, value, ParameterID, "AdditionalInfo");
            });
            $(".delete").click(function (e) {
                e.stopPropagation();
                var CurrentEle = $(this);
                var value = $(this).html();
                var row = $(e.target).closest('tr');
                var ParameterID = row.find($("[id*=key]")).val();
                //DeleteRow(ParameterID);
                DeleteRow(ParameterID, confirm("Are you sure?"));
            });
        });
        function UpdateVal(CurrentEle, value, ParameterID, ColumnToUpdate) {
            if ($(".cellValue") !== undefined) {
                if ($(".cellValue").val() !== undefined) {
                    $(".cellValue").parent().html($("#OriginalValue").val().trim());
                    $(".cellValue").remove();
                }
            }
            if (value.match("<") == null) {
                if (ColumnToUpdate == "IsSetvalue" || ColumnToUpdate == "IsUserControlled") {
                    $(CurrentEle).html('<div class="cellValue" id="cellWrapper"> ' +
                        ' <select id="txtValue"  value ="' + value + '" > '+
                        '<option value = "True" >User Controlled</option >' +
                        '<option value = "False" >Set Value</option >' +
                        '</select>' +
                        '<input class="cellValue" type="hidden" value="' + ParameterID + '" id="keySelected" />' +
                        '<input class="cellValue" type="hidden" value="' + ColumnToUpdate + '" id="ColumnToUpdate" /> ' +
                        '<input class="cellValue" type="hidden" value="' + value + '" id="OriginalValue" /> ' +
                        '<input class="cellValue" type="button" value="save"   onclick="return SaveChanges()" /> ' +
                        '<input class="cellValue" type="button" value="cancel" onclick="return CancelChanges()" /> ' +
                        '</div> ');
                }
                else if(ColumnToUpdate == "ParameterDesc" || ColumnToUpdate == "AdditionalInfo")
                {
                    $(CurrentEle).html('<div class="cellValue" id="cellWrapper"> ' +
                        '<textarea class="cellValue" type="text" id="txtValue"  style="resize : both">' + value + '</textarea>' +
                        '<input class="cellValue" type="hidden" value="' + ParameterID + '" id="keySelected" />' +
                        '<input class="cellValue" type="hidden" value="' + ColumnToUpdate + '" id="ColumnToUpdate" /> ' +
                        '<input class="cellValue" type="hidden" value="' + value + '" id="OriginalValue" /> ' +
                        '<input class="cellValue" type="button" value="save"   onclick="return SaveChanges()" /> ' +
                        '<input class="cellValue" type="button" value="cancel" onclick="return CancelChanges()" /> ' +
                        '</div> ');
                }
                else
                {
                    $(CurrentEle).html('<div class="cellValue" id="cellWrapper"> ' +
                        '<input class="cellValue" type="text" id="txtValue" value="' + value + '" />' +
                        '<input class="cellValue" type="hidden" value="' + ParameterID + '" id="keySelected" />' +
                        '<input class="cellValue" type="hidden" value="' + ColumnToUpdate + '" id="ColumnToUpdate" /> ' +
                        '<input class="cellValue" type="hidden" value="' + value + '" id="OriginalValue" /> ' +
                        '<input class="cellValue" type="button" value="save"   onclick="return SaveChanges()" /> ' +
                        '<input class="cellValue" type="button" value="cancel" onclick="return CancelChanges()" /> ' +
                        '</div> ');
                }
                
            }
            $(".cellValue").focus();
            $(".cellValue").keyup(function (event) {
                if (event.keyCode == 13) {
                    $(CurrentEle).html($(".cellValue").val().trim());
                }
            });
        }

        function CancelChanges(e) {
            if ($(".cellValue") !== undefined) {
                if ($(".cellValue").val() !== undefined) {
                    $(".cellValue").parent().html($("#OriginalValue").val().trim());
                    $(".cellValue").remove();
                }
            }
            window.location.reload();
        }

        function SaveChanges(e) {
            var para = {};
            para.ColumnToUpdate = $("[id*=ColumnToUpdate]").val();
            para.FieldValue = $("[id*=txtValue]").val().trim();
            para.ID = $("[id*=keySelected]").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SavePara", "Parameters")',
                data: '{para: ' + JSON.stringify(para) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == 0) { alert("input wrong!! only 'true' or 'false' allowed"); }
                    else {
                        alert("done!!");
                        location.href = location.href;
                        window.location.reload();
                    }
                }

            });
        }

        function DeleteRow(ParameterID,con) {
            var para = {};
            if (con == true)
            {
                para.ID = ParameterID;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeletePara", "Parameters")',
                    data: '{para: ' + JSON.stringify(para) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        alert("done!!");
                        location.href = location.href;
                    
                        window.location.reload();
                    
                    }

                });
            }
            
        }
    </script>
}


<div style="max-height: 500px; overflow: auto;">
    <table class="table table-hover">
        <thead>
            <tr>
                @*<th scope="col">ID</th>
                    <th scope="col">SSRSReportId</th>*@
                <th width="1px"></th>
                @*<th scope="col">@Html.DisplayNameFor(m => m[0].SPName)</th>*@
                <th scope="col">@Html.DisplayNameFor(m => m[0].RDLParamName)</th>
                <th scope="col">@Html.DisplayNameFor(m => m[0].ParameterDesc)</th>
                <th scope="col"><center>@Html.DisplayNameFor(m => m[0].IsUserControlled)</center></th>
                <th scope="col"><center>@Html.DisplayNameFor(m => m[0].UserControlType)</center></th>
                <th scope="col"><center>@Html.DisplayNameFor(m => m[0].DefaultValue)</center></th>
                <th scope="col">@Html.DisplayNameFor(m => m[0].AdditionalInfo)</th>
                @*<th scope="col">@Html.DisplayNameFor(m => m[0].RowCreateDate)</th>
                <th scope="col">@Html.DisplayNameFor(m => m[0].CreateEndUserName)</th>*@
                <th></th>

            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count; i++)
            {
                <tr class="table-primary">
                    @*<th scope="row">Primary</th>*@
                    @*<td>@sp.ID</td>
                <td>@sp.SSRSReportId</td>*@
                    <td>@Html.HiddenFor(modelItem => @Model[i].ID, new { id = "key" })</td>
                    @*<td>@Model[i].SPName</td>*@
                    <td width="200px"><div class="RDLParamName">@if (@Model[i].RDLParamName == null){ <text>&nbsp;</text>} else{ @Html.DisplayFor(modelItem => @Model[i].RDLParamName)}</div></td>
                    <td ><div class="ParameterDesc">@if (@Model[i].ParameterDesc == null){<text>&nbsp;</text>}else{@Html.DisplayFor(modelItem => @Model[i].ParameterDesc)}</div></td>
                    <td width="80px" align="center"><div class="IsUserControlled">@if (@Model[i].IsUserControlled == null){<text>&nbsp;</text>}else{@Html.DisplayFor(modelItem => @Model[i].IsUserControlled)}</div></td>
                    <td width="160px" align="center"><div class="UserControlType">@if (@Model[i].UserControlType == null){<text>&nbsp;</text>}else{@Html.DisplayFor(modelItem => @Model[i].UserControlType)}</div></td>
                    <td width="100px" align="center"><div class="DefaultValue">@if (@Model[i].DefaultValue == null){<text>&nbsp;</text> } else {@Html.DisplayFor(modelItem => @Model[i].DefaultValue)}</div></td>
                    <td width="450px"><div class="AdditionalInfo">@if (@Model[i].AdditionalInfo == null){<text>&nbsp;</text>}else{@Html.DisplayFor(modelItem => @Model[i].AdditionalInfo)}</div></td>
                    @*<td width="120px">@Model[i].RowCreateDate.ToShortDateString()</td>
                    <td width="160px">@Model[i].CreateEndUserName</td>*@
                    <td width="40px"><div class="delete"><button class="btn btn-outline-secondary">Delete</button></div></td>
                </tr>
            }
        </tbody>
    </table>

</div>


@Html.Partial("_AddParameters")

